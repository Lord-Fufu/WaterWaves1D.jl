export Random, random
"""
    random(x;args)

Randomly generate a vector of size `x`, based on provided (optional arguments) :
- `L` is the typical wavelength (default is `L=1`),
- `s` is the (real) Sobolev index regularity (default is `s=∞`, smooth data),
- `λ` is the length of spatial localization (default is `λ=∞`, no localization),
- `a` is the amplitude of the returned vector (default is `a=1`).

The vector is generated through randomly chosen Fourier coefficients,
multiplied with weigth `w=10^(-|k|L/(2π))` if `s=∞`, or `w=1/(1+9(|k|L/(2π))^(s+1/2))` otherwise.
If `λ≠∞`, the function in spatial variables is multiplied by `exp(-|x/λ|^2)`,
and in any case normalized to have maximum absolute value 1.


"""
function random( x;L=1,s=Inf,λ=Inf,a=1 )


    k = Mesh( x ).k
    if s == Inf
        w = 10 .^(-abs.(k*L/(2*π)))
    else
        w = 1 ./( 1 .+ 9*abs.(k*L/(2*π)).^(s+1/2) )
    end
    if λ == Inf
        φ = zero(x).+1
    else
        φ = exp.(-abs.((x/λ).^2))
    end

    θ = 2*π*rand(Float64,length(x))
    r = rand(Float64,length(x))
    Fourier = r.*exp.(-1im.*θ).*w
    Physic = real.(ifft(Fourier)).*φ
    return Physic./(maximum(Physic)-minimum(Physic))*a
end

"""
    Random(param;args)

Randomly generated initial data, based on provided (optional arguments) :
- `L` is the typical wavelength (default is `L=1`),
- `s` is the (real) Sobolev index regularity (default is `s=∞`),
- `λ` is the length of spatial localization (default is `λ=∞`, no localization),
- `a` is the couple of amplitudes of the surface deformation, and velocity (default is `a=(1,1)`).


Return an initial data `init::InitialData`,  to be used in initial-value problems `Problem(model, init, param)`,
with `init.η` and `init.v` two samples of `random(x;L,s,λ)`,
where `x` is the set of collocation points generated by `Mesh(param)`.

"""
struct Random <: InitialData

    η
    v
    label :: String
    info  :: String

    function Random(param;L=1,s=Inf,λ=Inf,a=(1,1))
        mesh=Mesh(param);x=mesh.x;
        η = random( x; L=L,s=s,λ=λ,a=a[1] )
        v = random( x; L=L,s=s,λ=λ,a=a[2] )
        init=Init(x,η,v)
        if s == Inf s="∞" end
        if λ == Inf λ="∞" end
        label = "randomly generated"
        info = "Randomly generated initial data with \n\
        ├───typical wavelength: L = $L,\n\
        ├─────regularity index: s = $s,\n\
        ├─spatial localization: λ = $λ,\n\
        ├────surface amplitude: $(a[1]),\n\
        └───velocity amplitude: $(a[2])."
    	new( init.η,init.v,label,info )

    end

end
